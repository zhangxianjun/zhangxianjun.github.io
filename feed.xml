<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>工作手册</title><subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle> <updated>2024-03-15T08:29:21+00:00</updated> <author> <name>Casper</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="zh-CN" href="/"/> <generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator> <rights> © 2024 Casper </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>AI Large Language Model</title><link href="/posts/AI-Large-Language-Model/" rel="alternate" type="text/html" title="AI Large Language Model" /><published>2024-03-01T00:00:00+00:00</published> <updated>2024-03-01T00:00:00+00:00</updated> <id>/posts/AI-Large-Language-Model/</id> <content src="/posts/AI-Large-Language-Model/" /> <author> <name>Casper</name> </author> <summary> 生态介绍 基础模型 GPT-4 LLaMA Bard 中间件 LangChain Chroma Pinecone 应用层（AIGC） ChatGPT GitHub Copilot Midjourney 演进 Attention机制 Transformer BERT/GPT </summary> </entry> <entry><title>二层</title><link href="/posts/%E4%BA%8C%E5%B1%82/" rel="alternate" type="text/html" title="二层" /><published>2024-02-01T00:00:00+00:00</published> <updated>2024-02-01T00:00:00+00:00</updated> <id>/posts/%E4%BA%8C%E5%B1%82/</id> <content src="/posts/%E4%BA%8C%E5%B1%82/" /> <author> <name>Casper</name> </author> <summary> 学习Golang的目标 能够看懂Golang工程的源码。 能够修改Golang工程的源码。 关键字概览 package（包定义）、import（包导入） var（声明变量）、const（声明常量） map（声明map类型数据） interface（声明接口） type（声明自定义类型） struct（声明数据类型） func（声明函数和方法） break、case、continue、for、fallthrough、else、if、switch、goto、default（流程控制） return（函数返回） range（读取slice、map、channel数据） defer（推迟函数） go （并发） select（选择） chan（信道） 关键代码片段 Hello, world! ... </summary> </entry> <entry><title>支付</title><link href="/posts/%E6%94%AF%E4%BB%98/" rel="alternate" type="text/html" title="支付" /><published>2024-01-01T00:00:00+00:00</published> <updated>2024-01-01T00:00:00+00:00</updated> <id>/posts/%E6%94%AF%E4%BB%98/</id> <content src="/posts/%E6%94%AF%E4%BB%98/" /> <author> <name>Casper</name> </author> <summary> </summary> </entry> <entry><title>钱包</title><link href="/posts/%E9%92%B1%E5%8C%85%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="钱包" /><published>2023-12-01T00:00:00+00:00</published> <updated>2023-12-01T00:00:00+00:00</updated> <id>/posts/%E9%92%B1%E5%8C%85%E7%AC%94%E8%AE%B0/</id> <content src="/posts/%E9%92%B1%E5%8C%85%E7%AC%94%E8%AE%B0/" /> <author> <name>Casper</name> </author> <summary> 学习Golang的目标 能够看懂Golang工程的源码。 能够修改Golang工程的源码。 关键字概览 package（包定义）、import（包导入） var（声明变量）、const（声明常量） map（声明map类型数据） interface（声明接口） type（声明自定义类型） struct（声明数据类型） func（声明函数和方法） break、case、continue、for、fallthrough、else、if、switch、goto、default（流程控制） return（函数返回） range（读取slice、map、channel数据） defer（推迟函数） go （并发） select（选择） chan（信道） 关键代码片段 Hello, world! ... </summary> </entry> <entry><title>Bitcoin Ordinals笔记</title><link href="/posts/Bitcoin-Ordinals%E7%AC%94%E8%AE%B0/" rel="alternate" type="text/html" title="Bitcoin Ordinals笔记" /><published>2023-07-31T16:00:00+00:00</published> <updated>2023-12-29T07:43:31+00:00</updated> <id>/posts/Bitcoin-Ordinals%E7%AC%94%E8%AE%B0/</id> <content src="/posts/Bitcoin-Ordinals%E7%AC%94%E8%AE%B0/" /> <author> <name>Casper</name> </author> <summary> 学习Golang的目标 能够看懂Golang工程的源码。 能够修改Golang工程的源码。 关键字概览 package（包定义）、import（包导入） var（声明变量）、const（声明常量） map（声明map类型数据） interface（声明接口） type（声明自定义类型） struct（声明数据类型） func（声明函数和方法） break、case、continue、for、fallthrough、else、if、switch、goto、default（流程控制） return（函数返回） range（读取slice、map、channel数据） defer（推迟函数） go （并发） select（选择） chan（信道） 关键代码片段 Hello, world! ... </summary> </entry> </feed>
